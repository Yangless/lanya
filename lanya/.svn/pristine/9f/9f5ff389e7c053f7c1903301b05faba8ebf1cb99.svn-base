package com.nwl.lanya.po;

import java.util.ArrayList;
import java.util.List;

public class TribesExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public TribesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(Integer value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(Integer value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(Integer value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(Integer value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(Integer value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<Integer> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<Integer> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(Integer value1, Integer value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(Integer value1, Integer value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andTribeNameIsNull() {
            addCriterion("tribe_name is null");
            return (Criteria) this;
        }

        public Criteria andTribeNameIsNotNull() {
            addCriterion("tribe_name is not null");
            return (Criteria) this;
        }

        public Criteria andTribeNameEqualTo(String value) {
            addCriterion("tribe_name =", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameNotEqualTo(String value) {
            addCriterion("tribe_name <>", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameGreaterThan(String value) {
            addCriterion("tribe_name >", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameGreaterThanOrEqualTo(String value) {
            addCriterion("tribe_name >=", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameLessThan(String value) {
            addCriterion("tribe_name <", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameLessThanOrEqualTo(String value) {
            addCriterion("tribe_name <=", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameLike(String value) {
            addCriterion("tribe_name like", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameNotLike(String value) {
            addCriterion("tribe_name not like", value, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameIn(List<String> values) {
            addCriterion("tribe_name in", values, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameNotIn(List<String> values) {
            addCriterion("tribe_name not in", values, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameBetween(String value1, String value2) {
            addCriterion("tribe_name between", value1, value2, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeNameNotBetween(String value1, String value2) {
            addCriterion("tribe_name not between", value1, value2, "tribeName");
            return (Criteria) this;
        }

        public Criteria andTribeLabelIsNull() {
            addCriterion("tribe_label is null");
            return (Criteria) this;
        }

        public Criteria andTribeLabelIsNotNull() {
            addCriterion("tribe_label is not null");
            return (Criteria) this;
        }

        public Criteria andTribeLabelEqualTo(String value) {
            addCriterion("tribe_label =", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelNotEqualTo(String value) {
            addCriterion("tribe_label <>", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelGreaterThan(String value) {
            addCriterion("tribe_label >", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelGreaterThanOrEqualTo(String value) {
            addCriterion("tribe_label >=", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelLessThan(String value) {
            addCriterion("tribe_label <", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelLessThanOrEqualTo(String value) {
            addCriterion("tribe_label <=", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelLike(String value) {
            addCriterion("tribe_label like", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelNotLike(String value) {
            addCriterion("tribe_label not like", value, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelIn(List<String> values) {
            addCriterion("tribe_label in", values, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelNotIn(List<String> values) {
            addCriterion("tribe_label not in", values, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelBetween(String value1, String value2) {
            addCriterion("tribe_label between", value1, value2, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeLabelNotBetween(String value1, String value2) {
            addCriterion("tribe_label not between", value1, value2, "tribeLabel");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceIsNull() {
            addCriterion("tribe_introduce is null");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceIsNotNull() {
            addCriterion("tribe_introduce is not null");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceEqualTo(String value) {
            addCriterion("tribe_introduce =", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceNotEqualTo(String value) {
            addCriterion("tribe_introduce <>", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceGreaterThan(String value) {
            addCriterion("tribe_introduce >", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceGreaterThanOrEqualTo(String value) {
            addCriterion("tribe_introduce >=", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceLessThan(String value) {
            addCriterion("tribe_introduce <", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceLessThanOrEqualTo(String value) {
            addCriterion("tribe_introduce <=", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceLike(String value) {
            addCriterion("tribe_introduce like", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceNotLike(String value) {
            addCriterion("tribe_introduce not like", value, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceIn(List<String> values) {
            addCriterion("tribe_introduce in", values, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceNotIn(List<String> values) {
            addCriterion("tribe_introduce not in", values, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceBetween(String value1, String value2) {
            addCriterion("tribe_introduce between", value1, value2, "tribeIntroduce");
            return (Criteria) this;
        }

        public Criteria andTribeIntroduceNotBetween(String value1, String value2) {
            addCriterion("tribe_introduce not between", value1, value2, "tribeIntroduce");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}