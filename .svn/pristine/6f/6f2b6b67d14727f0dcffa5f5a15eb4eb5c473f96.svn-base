package com.nwl.lanya.rest;

import java.io.File;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.nwl.lanya.common.MsgCode;
import com.nwl.lanya.common.PageModel;
import com.nwl.lanya.common.PropertiesUtil;
import com.nwl.lanya.dto.VideoAudioDto;
import com.nwl.lanya.service.VideoAudioService;

@RestController
@RequestMapping("videoAudioRest")
public class VideoAudioRest extends AbstractBaseRest<VideoAudioDto>{
	
	@Autowired
	private VideoAudioService service;
	@Autowired
	private PropertiesUtil propertiesUtil;

	@Override
	@RequestMapping("list")
	public PageModel list(Integer page, Integer rows, VideoAudioDto dto) {
		try {
			PageModel pageModel = new PageModel();
			pageModel.setPageNo(page);
			pageModel.setPageSize(rows);
			pageModel.setStartIndex((page-1)*rows);
			dto.setPageModel(pageModel);
			
			service.list(dto);
			dto.setMsgCode(MsgCode.REQUEST_SCCESS);
			dto.setMsg("操作成功");
		} catch (Exception e) {
			e.printStackTrace();
			dto.setMsgCode(MsgCode.REQUEST_FALSE);
			dto.setMsg("系统异常,请联系维护人员");
		}
		return dto.getPageModel();
	}
	

	@Override
	public VideoAudioDto deleteByIds(VideoAudioDto dto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public VideoAudioDto findById(VideoAudioDto dto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	@RequestMapping("saveOrUpdate")
	public VideoAudioDto saveOrUpdate(VideoAudioDto dto) {
		try {
			service.saveOrUpdate(dto);
		} catch (Exception e) {
			e.printStackTrace();
			dto.setMsgCode(MsgCode.REQUEST_FALSE);
			dto.setMsg("系统异常,请联系维护人员");
		}
		return dto;
	}
	
	/**
	 * 
	* @Title: updateUseAble 
	* @Description: 更新视频可用状态
	* @param    
	* @return AccountDto    
	* @throws
	 */
	@RequestMapping("updateUseAble")
	public VideoAudioDto updateUseAble(VideoAudioDto dto) {
		try {
			service.updateUseAble(dto);
			
			dto.setMsgCode(MsgCode.REQUEST_SCCESS);
			dto.setMsg("操作成功");
		} catch (Exception e) {
			e.printStackTrace();
			dto.setMsgCode(MsgCode.REQUEST_FALSE);
			dto.setMsg("系统异常,请联系维护人员");
		}
		return dto;
	}
	
	/**
	 * 
	* @Title: upLoad 
	* @Description: 视频音频上传接口
	* @param    
	* @return VideoAudioDto    
	* @throws
	 */
	@RequestMapping("upLoad")
	public VideoAudioDto upLoad(@RequestParam(value = "file")MultipartFile file,VideoAudioDto dto){
		try {
			//生成文件唯一名称
			String fileName = file.getOriginalFilename();
			int index = fileName.indexOf(".");
			String type = fileName.substring(index, fileName.length());
			//判断文件类型
			if(type.equals(".mp4")){
            	dto.setType(1);
			}
			if(type.equals(".mp3")){
				dto.setType(2);
			}
			String fileNewName = UUID.randomUUID()+type;
			
			//上传至服务器
			File targetFile = new File(propertiesUtil.getImgSoureUrl()+fileNewName);
			file.transferTo(targetFile);//写入目标文件
			
			//生成网络访问路径
			String httpUrl=propertiesUtil.getImgHttpUrl()+fileNewName;
			dto.setHttpUrl(httpUrl);
			
			dto.setMsgCode(MsgCode.REQUEST_SCCESS);
			dto.setMsg("操作成功");
		} catch (Exception e) {
			e.printStackTrace();
			dto.setMsgCode(MsgCode.REQUEST_FALSE);
			dto.setMsg("系统异常,请联系维护人员");
		}
		return dto;
	}
	
	/**
	 * 
	* @Title: praiseNumber 
	* @Description: 添加获赞次数
	* @param    
	* @return AccountDto    
	* @throws
	 */
	@RequestMapping("praiseNumber")
	public VideoAudioDto praiseNumber(VideoAudioDto dto) {
		try {
			service.praiseNumber(dto);
			dto.setMsgCode(MsgCode.REQUEST_SCCESS);
			dto.setMsg("操作成功");
		} catch (Exception e) {
			e.printStackTrace();
			dto.setMsgCode(MsgCode.REQUEST_FALSE);
			dto.setMsg("系统异常,请联系维护人员");
		}
		return dto;
	} 

}
