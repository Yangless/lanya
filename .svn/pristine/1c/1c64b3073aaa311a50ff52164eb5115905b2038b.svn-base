package com.nwl.lanya.po;

import java.util.ArrayList;
import java.util.List;

public class CourseExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public CourseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCourseNameIsNull() {
            addCriterion("course_name is null");
            return (Criteria) this;
        }

        public Criteria andCourseNameIsNotNull() {
            addCriterion("course_name is not null");
            return (Criteria) this;
        }

        public Criteria andCourseNameEqualTo(String value) {
            addCriterion("course_name =", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotEqualTo(String value) {
            addCriterion("course_name <>", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameGreaterThan(String value) {
            addCriterion("course_name >", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameGreaterThanOrEqualTo(String value) {
            addCriterion("course_name >=", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLessThan(String value) {
            addCriterion("course_name <", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLessThanOrEqualTo(String value) {
            addCriterion("course_name <=", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameLike(String value) {
            addCriterion("course_name like", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotLike(String value) {
            addCriterion("course_name not like", value, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameIn(List<String> values) {
            addCriterion("course_name in", values, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotIn(List<String> values) {
            addCriterion("course_name not in", values, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameBetween(String value1, String value2) {
            addCriterion("course_name between", value1, value2, "courseName");
            return (Criteria) this;
        }

        public Criteria andCourseNameNotBetween(String value1, String value2) {
            addCriterion("course_name not between", value1, value2, "courseName");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIsNull() {
            addCriterion("total_time is null");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIsNotNull() {
            addCriterion("total_time is not null");
            return (Criteria) this;
        }

        public Criteria andTotalTimeEqualTo(String value) {
            addCriterion("total_time =", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotEqualTo(String value) {
            addCriterion("total_time <>", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeGreaterThan(String value) {
            addCriterion("total_time >", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeGreaterThanOrEqualTo(String value) {
            addCriterion("total_time >=", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeLessThan(String value) {
            addCriterion("total_time <", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeLessThanOrEqualTo(String value) {
            addCriterion("total_time <=", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeLike(String value) {
            addCriterion("total_time like", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotLike(String value) {
            addCriterion("total_time not like", value, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeIn(List<String> values) {
            addCriterion("total_time in", values, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotIn(List<String> values) {
            addCriterion("total_time not in", values, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeBetween(String value1, String value2) {
            addCriterion("total_time between", value1, value2, "totalTime");
            return (Criteria) this;
        }

        public Criteria andTotalTimeNotBetween(String value1, String value2) {
            addCriterion("total_time not between", value1, value2, "totalTime");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIsNull() {
            addCriterion("course_url is null");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIsNotNull() {
            addCriterion("course_url is not null");
            return (Criteria) this;
        }

        public Criteria andCourseUrlEqualTo(String value) {
            addCriterion("course_url =", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotEqualTo(String value) {
            addCriterion("course_url <>", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlGreaterThan(String value) {
            addCriterion("course_url >", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlGreaterThanOrEqualTo(String value) {
            addCriterion("course_url >=", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLessThan(String value) {
            addCriterion("course_url <", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLessThanOrEqualTo(String value) {
            addCriterion("course_url <=", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlLike(String value) {
            addCriterion("course_url like", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotLike(String value) {
            addCriterion("course_url not like", value, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlIn(List<String> values) {
            addCriterion("course_url in", values, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotIn(List<String> values) {
            addCriterion("course_url not in", values, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlBetween(String value1, String value2) {
            addCriterion("course_url between", value1, value2, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseUrlNotBetween(String value1, String value2) {
            addCriterion("course_url not between", value1, value2, "courseUrl");
            return (Criteria) this;
        }

        public Criteria andCourseListIdIsNull() {
            addCriterion("course_list_id is null");
            return (Criteria) this;
        }

        public Criteria andCourseListIdIsNotNull() {
            addCriterion("course_list_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourseListIdEqualTo(Integer value) {
            addCriterion("course_list_id =", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdNotEqualTo(Integer value) {
            addCriterion("course_list_id <>", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdGreaterThan(Integer value) {
            addCriterion("course_list_id >", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("course_list_id >=", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdLessThan(Integer value) {
            addCriterion("course_list_id <", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdLessThanOrEqualTo(Integer value) {
            addCriterion("course_list_id <=", value, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdIn(List<Integer> values) {
            addCriterion("course_list_id in", values, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdNotIn(List<Integer> values) {
            addCriterion("course_list_id not in", values, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdBetween(Integer value1, Integer value2) {
            addCriterion("course_list_id between", value1, value2, "courseListId");
            return (Criteria) this;
        }

        public Criteria andCourseListIdNotBetween(Integer value1, Integer value2) {
            addCriterion("course_list_id not between", value1, value2, "courseListId");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}