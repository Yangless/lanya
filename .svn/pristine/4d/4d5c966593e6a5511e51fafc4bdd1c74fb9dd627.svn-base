package com.nwl.lanya.websocket.netty;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.nwl.lanya.SpringUtil;
import com.nwl.lanya.service.TalkService;
import com.nwl.lanya.service.impl.TalkServiceImpl;

import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.channel.group.ChannelGroup;
import io.netty.channel.group.DefaultChannelGroup;
import io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
import io.netty.util.concurrent.GlobalEventExecutor;

/**
 * TextWebSocketFrame： 在netty中，是用于为websocket专门处理文本的对象，frame是消息的载体
 */
public class ChatHandler extends SimpleChannelInboundHandler<TextWebSocketFrame> {

	private static ChannelGroup users = 
			new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);
	
	@Override
	protected void channelRead0(ChannelHandlerContext cxt, TextWebSocketFrame msg) 
			throws Exception {
		//获取用户消息
		String content = msg.text();
		//控制台输出
		System.out.println(content);
		//输出到所有线上用户
		TalkService talkService = SpringUtil.getBean(TalkServiceImpl.class);
		talkService.save(content);
		users.writeAndFlush(new TextWebSocketFrame(content));
	}

	@Override
	public void handlerAdded(ChannelHandlerContext ctx) throws Exception {
		//连接是将用户加入ChannelGroup
		System.out.println("客户端链接，channle对应的长id为：" 
				+ ctx.channel().id().asLongText());
		users.add(ctx.channel());
	}

	@Override
	public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {
		System.out.println("客户端断开，channle对应的短id为：" 
				+ ctx.channel().id().asShortText());
		// 当触发handlerRemoved，ChannelGroup会自动移除对应客户端的channel
	}

	@Override
	public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
		cause.printStackTrace();
		// 发生异常之后关闭连接（关闭channel），随后从ChannelGroup中移除
		ctx.channel().close();
		users.remove(ctx.channel());
	}
}
