<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwl.lanya.dao.WalletDetailMapper">
  <resultMap id="BaseResultMap" type="com.nwl.lanya.po.WalletDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recording_time" jdbcType="TIMESTAMP" property="recordingTime" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="is_add" jdbcType="INTEGER" property="isAdd" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="wallet_id" jdbcType="INTEGER" property="walletId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.nwl.lanya.po.WalletDetail">
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recording_time, money, is_add, pay_type, pay_account, wallet_id
  </sql>
  <sql id="Blob_Column_List">
    memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nwl.lanya.po.WalletDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wallet_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nwl.lanya.po.WalletDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wallet_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wallet_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwl.lanya.po.WalletDetailExample">
    delete from wallet_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwl.lanya.po.WalletDetail">
    insert into wallet_detail (id, recording_time, money, 
      is_add, pay_type, pay_account, 
      wallet_id, memo)
    values (#{id,jdbcType=INTEGER}, #{recordingTime,jdbcType=TIMESTAMP}, #{money,jdbcType=DOUBLE}, 
      #{isAdd,jdbcType=INTEGER}, #{payType,jdbcType=VARCHAR}, #{payAccount,jdbcType=VARCHAR}, 
      #{walletId,jdbcType=INTEGER}, #{memo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nwl.lanya.po.WalletDetail">
    insert into wallet_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordingTime != null">
        recording_time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="isAdd != null">
        is_add,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payAccount != null">
        pay_account,
      </if>
      <if test="walletId != null">
        wallet_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordingTime != null">
        #{recordingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="isAdd != null">
        #{isAdd,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="walletId != null">
        #{walletId,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwl.lanya.po.WalletDetailExample" resultType="java.lang.Long">
    select count(*) from wallet_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wallet_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recordingTime != null">
        recording_time = #{record.recordingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.isAdd != null">
        is_add = #{record.isAdd,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payAccount != null">
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.walletId != null">
        wallet_id = #{record.walletId,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update wallet_detail
    set id = #{record.id,jdbcType=INTEGER},
      recording_time = #{record.recordingTime,jdbcType=TIMESTAMP},
      money = #{record.money,jdbcType=DOUBLE},
      is_add = #{record.isAdd,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      wallet_id = #{record.walletId,jdbcType=INTEGER},
      memo = #{record.memo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wallet_detail
    set id = #{record.id,jdbcType=INTEGER},
      recording_time = #{record.recordingTime,jdbcType=TIMESTAMP},
      money = #{record.money,jdbcType=DOUBLE},
      is_add = #{record.isAdd,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      wallet_id = #{record.walletId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwl.lanya.po.WalletDetail">
    update wallet_detail
    <set>
      <if test="recordingTime != null">
        recording_time = #{recordingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="isAdd != null">
        is_add = #{isAdd,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="walletId != null">
        wallet_id = #{walletId,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nwl.lanya.po.WalletDetail">
    update wallet_detail
    set recording_time = #{recordingTime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DOUBLE},
      is_add = #{isAdd,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      wallet_id = #{walletId,jdbcType=INTEGER},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwl.lanya.po.WalletDetail">
    update wallet_detail
    set recording_time = #{recordingTime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DOUBLE},
      is_add = #{isAdd,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      wallet_id = #{walletId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>