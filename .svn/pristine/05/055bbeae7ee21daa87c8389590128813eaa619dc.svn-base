<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwl.lanya.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.nwl.lanya.po.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="video_audio_id" jdbcType="VARCHAR" property="videoAudioId" />
    <result column="comment_praise_number" jdbcType="INTEGER" property="commentPraiseNumber" />
    <result column="reply_number" jdbcType="INTEGER" property="replyNumber" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="use_able" jdbcType="INTEGER" property="useAble" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.nwl.lanya.po.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment.id, comment.account_id, comment.teacher_id, comment.video_audio_id, comment.comment_praise_number, comment.reply_number, 
    comment.comment_time, comment.parent_id, comment.use_able
  </sql>
  <sql id="Blob_Column_List">
    comment.content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nwl.lanya.po.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nwl.lanya.po.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwl.lanya.po.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwl.lanya.po.Comment" keyProperty="id" useGeneratedKeys="true">
    insert into comment (id, account_id, teacher_id, 
      video_audio_id, comment_praise_number, reply_number, 
      comment_time, parent_id, use_able, 
      content)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{videoAudioId,jdbcType=VARCHAR}, #{commentPraiseNumber,jdbcType=INTEGER}, #{replyNumber,jdbcType=INTEGER}, 
      #{commentTime,jdbcType=TIMESTAMP}, #{parentId,jdbcType=INTEGER}, #{useAble,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nwl.lanya.po.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="videoAudioId != null">
        video_audio_id,
      </if>
      <if test="commentPraiseNumber != null">
        comment_praise_number,
      </if>
      <if test="replyNumber != null">
        reply_number,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="useAble != null">
        use_able,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="videoAudioId != null">
        #{videoAudioId,jdbcType=VARCHAR},
      </if>
      <if test="commentPraiseNumber != null">
        #{commentPraiseNumber,jdbcType=INTEGER},
      </if>
      <if test="replyNumber != null">
        #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="useAble != null">
        #{useAble,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwl.lanya.po.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.videoAudioId != null">
        video_audio_id = #{record.videoAudioId,jdbcType=VARCHAR},
      </if>
      <if test="record.commentPraiseNumber != null">
        comment_praise_number = #{record.commentPraiseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.replyNumber != null">
        reply_number = #{record.replyNumber,jdbcType=INTEGER},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.useAble != null">
        use_able = #{record.useAble,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      video_audio_id = #{record.videoAudioId,jdbcType=VARCHAR},
      comment_praise_number = #{record.commentPraiseNumber,jdbcType=INTEGER},
      reply_number = #{record.replyNumber,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      use_able = #{record.useAble,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      video_audio_id = #{record.videoAudioId,jdbcType=VARCHAR},
      comment_praise_number = #{record.commentPraiseNumber,jdbcType=INTEGER},
      reply_number = #{record.replyNumber,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      use_able = #{record.useAble,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwl.lanya.po.Comment">
    update comment
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="videoAudioId != null">
        video_audio_id = #{videoAudioId,jdbcType=VARCHAR},
      </if>
      <if test="commentPraiseNumber != null">
        comment_praise_number = #{commentPraiseNumber,jdbcType=INTEGER},
      </if>
      <if test="replyNumber != null">
        reply_number = #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="useAble != null">
        use_able = #{useAble,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nwl.lanya.po.Comment">
    update comment
    set account_id = #{accountId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      video_audio_id = #{videoAudioId,jdbcType=VARCHAR},
      comment_praise_number = #{commentPraiseNumber,jdbcType=INTEGER},
      reply_number = #{replyNumber,jdbcType=INTEGER},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=INTEGER},
      use_able = #{useAble,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwl.lanya.po.Comment">
    update comment
    set account_id = #{accountId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      video_audio_id = #{videoAudioId,jdbcType=VARCHAR},
      comment_praise_number = #{commentPraiseNumber,jdbcType=INTEGER},
      reply_number = #{replyNumber,jdbcType=INTEGER},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=INTEGER},
      use_able = #{useAble,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 分页获取数据 -->
  <resultMap extends="BaseResultMap" id="VoMap" type="com.nwl.lanya.vo.CommentVo">
     <result column="accountCode" jdbcType="VARCHAR" property="accountCode" />
     <result column="realName" jdbcType="VARCHAR" property="realName" />
     <result column="nickName" jdbcType="VARCHAR" property="nickName" />
     <result column="phone" jdbcType="VARCHAR" property="phone" />
     <result column="photoUrl" jdbcType="VARCHAR" property="photoUrl" />
     <result column="teacherName" jdbcType="VARCHAR" property="teacherName" />
     <result column="videoAudioName" jdbcType="VARCHAR" property="videoAudioName" />
  </resultMap>
  <sql id="Vo_Column_List">
     account.account_code as accountCode,account.real_name as realName,account.nick_name as nickName,
     account.phone as phone,
     account.photo_url as photoUrl,
     t1.real_name as teacherName,video_audio.video_audio_name as videoAudioName
  </sql>
  <select id="findById" parameterType="com.nwl.lanya.dto.CommentDto" resultMap="VoMap">
      select
	  <include refid="Base_Column_List" />,
	  <include refid="Blob_Column_List" />,
	  <include refid="Vo_Column_List" />
	  from comment
	  inner join account on comment.account_id = account.id
	  inner join teacher on comment.teacher_id = teacher.id
	  inner join account t1 on teacher.account_id = t1.id
	  inner join video_audio on comment.video_audio_id = video_audio.id
	  <where>
	      <if test="po!=null">
	        <if test="po.id!=null">
	           and comment.id = #{po.id}
		    </if>
		  </if>  
	  </where>
  </select>	  
  <select id="list" parameterType="com.nwl.lanya.dto.CommentDto" resultMap="VoMap">
      select
	  <include refid="Base_Column_List" />,
	  <include refid="Blob_Column_List" />,
	  <include refid="Vo_Column_List" />
	  from comment
	  inner join account on comment.account_id = account.id
	  inner join teacher on comment.teacher_id = teacher.id
	  inner join account t1 on teacher.account_id = t1.id
	  inner join video_audio on comment.video_audio_id = video_audio.id
	  <where>
	      <if test="vo!=null">
	        <if test="vo.realName!=null">
	            <if test="vo.realName!=''"> 
		        and account.real_name = #{vo.realName}
		        </if>
		    </if>
		    <if test="vo.phone!=null">
	            <if test="vo.phone!=''"> 
		        and account.phone = #{vo.phone}
		        </if>
		    </if>
		    <if test="vo.teacherName!=null">
	            <if test="vo.teacherName!=''"> 
		        and t1.real_name = #{vo.teacherName}
		        </if>
		    </if>
		    <if test="vo.videoAudioName!=null">
	            <if test="vo.videoAudioName!=''"> 
		        and video_audio.video_audio_name like concat(concat('%',#{vo.videoAudioName}),'%')
		        </if>
		    </if>
	      </if>
          <if test="commentTimeStart!=null">
            <if test="commentTimeStart!=''"> 
	        and comment.comment_time &gt;= #{commentTimeStart}
	        </if>
	      </if>
	      <if test="commentTimeEnd!=null">
            <if test="commentTimeEnd!=''"> 
	        and comment.comment_time &lt;= #{commentTimeEnd}
	        </if>
	      </if>
	      <if test="videoAudioId!=null">
            <if test="videoAudioId!=''"> 
	        and video_audio.id = #{videoAudioId}
	        </if>
	      </if>
	      <!-- 传了parentId说明在查询评论回复，没传就查询parentId为空的评论 -->
	      <if test="parentId!=null">
	        and comment.parent_id = #{parentId}
	      </if>
	      <if test="parentId==null">
	        and comment.parent_id is null
	      </if>
	  </where>
      order by video_audio.praise_number desc,video_audio.id desc
      limit #{pageModel.startIndex},#{pageModel.pageSize}
  </select>
  <select id="countByLike" parameterType="com.nwl.lanya.dto.CommentDto" resultType="java.lang.Long">
      select count(*)
      from comment
	  inner join account on comment.account_id = account.id
	  inner join teacher on comment.teacher_id = teacher.id
	  inner join video_audio on comment.video_audio_id = video_audio.id
	  <where>
	      <if test="vo!=null">
	        <if test="vo.realName!=null">
	            <if test="vo.realName!=''"> 
		        and account.real_name = #{vo.realName}
		        </if>
		    </if>
		    <if test="vo.phone!=null">
	            <if test="vo.phone!=''"> 
		        and account.phone = #{vo.phone}
		        </if>
		    </if>
		    <if test="vo.teacherName!=null">
	            <if test="vo.teacherName!=''"> 
		        and t1.real_name = #{vo.teacherName}
		        </if>
		    </if>
		    <if test="vo.videoAudioName!=null">
	            <if test="vo.videoAudioName!=''"> 
		        and video_audio.video_audio_name like concat(concat('%',#{vo.videoAudioName}),'%')
		        </if>
		    </if>
	      </if>
          <if test="commentTimeStart!=null">
            <if test="commentTimeStart!=''"> 
	        and comment.comment_time &gt;= #{commentTimeStart}
	        </if>
	      </if>
	      <if test="commentTimeEnd!=null">
            <if test="commentTimeEnd!=''"> 
	        and comment.comment_time &lt;= #{commentTimeEnd}
	        </if>
	      </if>
	      <if test="videoAudioId!=null">
            <if test="videoAudioId!=''"> 
	        and video_audio.id = #{videoAudioId}
	        </if>
	      </if>
	      <!-- 传了parentId说明在查询评论回复，没传就查询parentId为空的评论 -->
	      <if test="parentId!=null">
	        and comment.parent_id = #{parentId}
	      </if>
	      <if test="parentId==null">
	        and comment.parent_id is null
	      </if>
	  </where>
  </select>
  
  
</mapper>