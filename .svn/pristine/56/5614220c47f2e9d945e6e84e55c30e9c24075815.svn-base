<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwl.lanya.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.nwl.lanya.po.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="total_share" jdbcType="INTEGER" property="totalShare" />
    <result column="attention" jdbcType="INTEGER" property="attention" />
    <result column="total_student" jdbcType="INTEGER" property="totalStudent" />
    <result column="praise" jdbcType="INTEGER" property="praise" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher.id, teacher.account_id, teacher.company_id, teacher.title, teacher.location, teacher.introduce, teacher.total_share, teacher.attention, teacher.total_student, 
    teacher.praise
  </sql>
  <select id="selectByExample" parameterType="com.nwl.lanya.po.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwl.lanya.po.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwl.lanya.po.Teacher">
    insert into teacher (id, account_id, company_id, 
      title, location, introduce, 
      total_share, attention, total_student, 
      praise)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{totalShare,jdbcType=INTEGER}, #{attention,jdbcType=INTEGER}, #{totalStudent,jdbcType=INTEGER}, 
      #{praise,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nwl.lanya.po.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="totalShare != null">
        total_share,
      </if>
      <if test="attention != null">
        attention,
      </if>
      <if test="totalStudent != null">
        total_student,
      </if>
      <if test="praise != null">
        praise,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="totalShare != null">
        #{totalShare,jdbcType=INTEGER},
      </if>
      <if test="attention != null">
        #{attention,jdbcType=INTEGER},
      </if>
      <if test="totalStudent != null">
        #{totalStudent,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        #{praise,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwl.lanya.po.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.totalShare != null">
        total_share = #{record.totalShare,jdbcType=INTEGER},
      </if>
      <if test="record.attention != null">
        attention = #{record.attention,jdbcType=INTEGER},
      </if>
      <if test="record.totalStudent != null">
        total_student = #{record.totalStudent,jdbcType=INTEGER},
      </if>
      <if test="record.praise != null">
        praise = #{record.praise,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      total_share = #{record.totalShare,jdbcType=INTEGER},
      attention = #{record.attention,jdbcType=INTEGER},
      total_student = #{record.totalStudent,jdbcType=INTEGER},
      praise = #{record.praise,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwl.lanya.po.Teacher">
    update teacher
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="totalShare != null">
        total_share = #{totalShare,jdbcType=INTEGER},
      </if>
      <if test="attention != null">
        attention = #{attention,jdbcType=INTEGER},
      </if>
      <if test="totalStudent != null">
        total_student = #{totalStudent,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        praise = #{praise,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwl.lanya.po.Teacher">
    update teacher
    set account_id = #{accountId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      total_share = #{totalShare,jdbcType=INTEGER},
      attention = #{attention,jdbcType=INTEGER},
      total_student = #{totalStudent,jdbcType=INTEGER},
      praise = #{praise,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据老师id获取老师信息 -->
  <resultMap extends="BaseResultMap" id="TeacherVoResultMap" type="com.nwl.lanya.vo.TeacherVo">
    <result column="company_nick" jdbcType="VARCHAR" property="companyNick" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
  </resultMap>
  <sql id="teacherVo_Column_List">
    company.company_nick,company.company_name,account.account_code,account.phone,account.email,account.real_name,account.nick_name,account.photo_url
  </sql>
  <select id="findTeacherVoById" parameterType="com.nwl.lanya.dto.TeacherDto" resultMap="TeacherVoResultMap">
	    select
	    <include refid="Base_Column_List" />
	    ,
	    <include refid="teacherVo_Column_List"/>
	    from teacher 
	    left join account on teacher.account_id = account.id
	    left join company on teacher.company_id = company.id
	    <where>
	       <if test="po!=null">
		        <if test="po.id!=null">
			        and teacher.id = #{po.id}
			    </if>
		    </if>
	    </where>
  </select>
  
  
  
  
</mapper>